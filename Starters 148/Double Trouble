import java.util.*;
class Codechef {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        int m = 1000000007;
        while (t-- > 0) {
            int n = sc.nextInt();
            int k = sc.nextInt();
            PriorityQueue<Long> pq = new PriorityQueue<>();
            for (int i = 0; i < n; i++) {
                pq.add(sc.nextLong());
            }
            while (k-->0) {
                long minElement = pq.poll(); // Get and remove the smallest element
                minElement = (2 * minElement); // Double it 
                pq.add(minElement); // Insert back into the priority queue
            }
            long sum = 0;
            while (!pq.isEmpty()) {
                sum = (sum + pq.poll()) % m; // Calculate the sum
            }
            System.out.println(sum);
        }
        sc.close();
    }
}


/*
LOGIC---
A priority queue (min-heap) can be used to always extract and double the smallest element efficiently. 
This approach allows you to perform the operation in logarithmic time relative to the size of the array.
*/