import java.util.*;
import java.lang.*;
import java.io.*;

class Codechef
{
	public static void main (String[] args) throws java.lang.Exception
	{
		Scanner sc = new Scanner(System.in);
        int t = sc.nextInt();
        while(t-->0){
            int n = sc.nextInt();
            String s = sc.next();
            StringBuilder ans = new StringBuilder("");
            //make all P
            for(int i=0;i<n;i++) ans.append('P');
            //now check how many winning in this situation
            int alreadywinning=0;
            for(int i=0;i<n;i++){
                if(s.charAt(i)=='R') alreadywinning++;
            }
            int needmoretowin = n/2 +1 - alreadywinning;
            int index=s.length()-1;
            while(needmoretowin>0){
                //start taking wins from back
                if(s.charAt(index)=='P'){ ans.setCharAt(index, 'S'); needmoretowin--;}
                if(s.charAt(index)=='S'){ ans.setCharAt(index, 'R'); needmoretowin--;}
                // at S there is no need to do anything already counted a swinning position
                index--;
            }
            System.out.println(ans.toString());
        }

	}
}

/*
LOGIC---
lexicographically ->  P<R<S
So, make first all P and see how amny you won now.
Now the leftover wins can be manipulated by changing from back of string, to keep ans string lexicographically smallest.
*/
